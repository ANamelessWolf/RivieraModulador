//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by a tool.
//     Runtime Version:4.0.30319.42000
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

namespace NamelessOld.Libraries.Yggdrasil.Resources {
    using System;
    
    
    /// <summary>
    ///   A strongly-typed resource class, for looking up localized strings, etc.
    /// </summary>
    // This class was auto-generated by the StronglyTypedResourceBuilder
    // class via a tool like ResGen or Visual Studio.
    // To add or remove a member, edit your .ResX file then rerun ResGen
    // with the /str option, or rebuild your VS project.
    [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Resources.Tools.StronglyTypedResourceBuilder", "4.0.0.0")]
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
    [global::System.Runtime.CompilerServices.CompilerGeneratedAttribute()]
    internal class Errors {
        
        private static global::System.Resources.ResourceManager resourceMan;
        
        private static global::System.Globalization.CultureInfo resourceCulture;
        
        [global::System.Diagnostics.CodeAnalysis.SuppressMessageAttribute("Microsoft.Performance", "CA1811:AvoidUncalledPrivateCode")]
        internal Errors() {
        }
        
        /// <summary>
        ///   Returns the cached ResourceManager instance used by this class.
        /// </summary>
        [global::System.ComponentModel.EditorBrowsableAttribute(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        internal static global::System.Resources.ResourceManager ResourceManager {
            get {
                if (object.ReferenceEquals(resourceMan, null)) {
                    global::System.Resources.ResourceManager temp = new global::System.Resources.ResourceManager("NamelessOld.Libraries.Yggdrasil.Resources.Errors", typeof(Errors).Assembly);
                    resourceMan = temp;
                }
                return resourceMan;
            }
        }
        
        /// <summary>
        ///   Overrides the current thread's CurrentUICulture property for all
        ///   resource lookups using this strongly typed resource class.
        /// </summary>
        [global::System.ComponentModel.EditorBrowsableAttribute(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        internal static global::System.Globalization.CultureInfo Culture {
            get {
                return resourceCulture;
            }
            set {
                resourceCulture = value;
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to The assembly names are different to compare its version..
        /// </summary>
        internal static string AssemblyDifferentName {
            get {
                return ResourceManager.GetString("AssemblyDifferentName", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Something goes wrong trying to decrypt the string..
        /// </summary>
        internal static string BadDecrypting {
            get {
                return ResourceManager.GetString("BadDecrypting", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Something goes wrong trying to encrypt the string..
        /// </summary>
        internal static string BadEncrypting {
            get {
                return ResourceManager.GetString("BadEncrypting", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to The line format doesn&apos;t match the wikipedia format..
        /// </summary>
        internal static string CanNotReadWikiFormat {
            get {
                return ResourceManager.GetString("CanNotReadWikiFormat", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to The input data has a different size for the defined columns.
        /// </summary>
        internal static string ColumnDifferentSize {
            get {
                return ResourceManager.GetString("ColumnDifferentSize", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to The category {0} does not exist .
        /// </summary>
        internal static string ConfigCategoryDoesNotExist {
            get {
                return ResourceManager.GetString("ConfigCategoryDoesNotExist", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to The property {0} does not exist on the category {1}.
        /// </summary>
        internal static string ConfigDoesNotExist {
            get {
                return ResourceManager.GetString("ConfigDoesNotExist", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to The image can not be downloaded from the given URL: {0}.
        /// </summary>
        internal static string DownloadImage {
            get {
                return ResourceManager.GetString("DownloadImage", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to An error occurrs on the frau thred with PID: {0} while working..
        /// </summary>
        internal static string DoWorkError {
            get {
                return ResourceManager.GetString("DoWorkError", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to The selected directory has no files on it..
        /// </summary>
        internal static string EmptyDirectory {
            get {
                return ResourceManager.GetString("EmptyDirectory", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Can not encrypt or decrypt an empty string.
        /// </summary>
        internal static string EmptyStringCrypto {
            get {
                return ResourceManager.GetString("EmptyStringCrypto", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to The file does not exists, or is not accessible..
        /// </summary>
        internal static string FileNotFound {
            get {
                return ResourceManager.GetString("FileNotFound", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to The directory &quot;{0}&quot; does not exists..
        /// </summary>
        internal static string MissingDirectory {
            get {
                return ResourceManager.GetString("MissingDirectory", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to The path is too long to access the file..
        /// </summary>
        internal static string PathToLong {
            get {
                return ResourceManager.GetString("PathToLong", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Can&apos;t rename the files beacuse the number of names doesn&apos;t match the size of the files..
        /// </summary>
        internal static string RenamerSizeNotMatch {
            get {
                return ResourceManager.GetString("RenamerSizeNotMatch", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to The root directory &quot;{0}&quot; does not exists, the scanner needs an existant directory..
        /// </summary>
        internal static string RootDirectoryMissing {
            get {
                return ResourceManager.GetString("RootDirectoryMissing", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Error saving the file.
        /// </summary>
        internal static string SavingFile {
            get {
                return ResourceManager.GetString("SavingFile", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to You don&apos;t have access to this file or directory. 
        ///Restriction found in this direction &quot;{0}&quot;..
        /// </summary>
        internal static string UnAuthorizedAccess {
            get {
                return ResourceManager.GetString("UnAuthorizedAccess", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to The XAttribute &quot;{0}&quot;, already exist on the node &quot;{1}&quot;..
        /// </summary>
        internal static string XAttributeExist {
            get {
                return ResourceManager.GetString("XAttributeExist", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to The XElement &quot;{0}&quot;, already exist on the node &quot;{1}&quot;..
        /// </summary>
        internal static string XElementExist {
            get {
                return ResourceManager.GetString("XElementExist", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to The attribute name &quot;{0}&quot; does not exist in the node &quot;{1}&quot;..
        /// </summary>
        internal static string XmlAttNameNotExist {
            get {
                return ResourceManager.GetString("XmlAttNameNotExist", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Error exporting xml node {0}..
        /// </summary>
        internal static string XmlExportNode {
            get {
                return ResourceManager.GetString("XmlExportNode", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to The Xml file {0} doesn&apos;t exists, before using this class be sure that the file exists..
        /// </summary>
        internal static string XmlFileDoesNotExists {
            get {
                return ResourceManager.GetString("XmlFileDoesNotExists", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to The node &quot;{0}&quot; does not exist in the node &quot;{1}&quot;..
        /// </summary>
        internal static string XmlNodeNameNotExist {
            get {
                return ResourceManager.GetString("XmlNodeNameNotExist", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to The index &quot;{0}&quot; is out of bounds.
        /// </summary>
        internal static string XmlNodeOutOfBounds {
            get {
                return ResourceManager.GetString("XmlNodeOutOfBounds", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Can not access the parent node, because is null..
        /// </summary>
        internal static string XmlParentNodeIsNull {
            get {
                return ResourceManager.GetString("XmlParentNodeIsNull", resourceCulture);
            }
        }
    }
}
